import { Injectable } from '@angular/core';
import * as CryptoJS from 'crypto-js';

@Injectable({ providedIn: 'root' })
export class CryptoService {
  private secretKey =
    'jfkdal;f78vjiwlshenenosjfkdnfie29737402bf8ewb29&7*(^&';

  encryptMessage(message: string) {
    const encryptedMessage = CryptoJS.AES.encrypt(
      message,
      this.secretKey
    ).toString();
    return encodeURIComponent(encryptedMessage);
  }

  decryptMessage(message: string) {
    const urlSafeEncryptedMessage = message; // Replace with the URL-safe encrypted message generated by encryptMessage()
    const encryptedMessage = decodeURIComponent(urlSafeEncryptedMessage);
    const decryptedBytes = CryptoJS.AES.decrypt(
      encryptedMessage,
      this.secretKey
    );
    return decryptedBytes.toString(CryptoJS.enc.Utf8);
  }

  encryptId(id: number) {
    const encryptedMessage = CryptoJS.AES.encrypt(
      id.toString(),
      this.secretKey
    ).toString();
    return encodeURIComponent(encryptedMessage);
  }

  decryptId(encryptedId: string) {
    const urlSafeEncryptedMessage = encryptedId; // Replace with the URL-safe encrypted message generated by encryptMessage()
    const encryptedMessage = decodeURIComponent(urlSafeEncryptedMessage);
    const decryptedBytes = CryptoJS.AES.decrypt(
      encryptedMessage,
      this.secretKey
    );
    return parseInt(decryptedBytes.toString(CryptoJS.enc.Utf8));
  }
}